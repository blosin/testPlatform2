image: docker:latest

variables:
 AWS_ACCOUNT: 382381053403
 ECR_REGION: "us-east-2"
 PROJ_IMG: "smartfran/platform-service"
 ECR_REPOSITORY: "382381053403.dkr.ecr.us-east-2.amazonaws.com"

services:
  - docker:dind

before_script:
  - echo $BUILD_TAG
  - IMAGE_TAG="$(echo $CI_COMMIT_SHA | head -c 8)"

stages:
  - clean
  - unit-test
  - static-test
  - build
  - push-image
  - deploy-testing
  - deploy-staging
#  - deploy-production
clean:
  stage: clean
  script:
    - echo "Removing all containers"
    - test $(docker ps -aq) && docker rm -f $(docker ps -aq)
    - echo "Prune all docker stuff without use"
    - docker system prune --force --all --volumes
    - echo "Clean npm garbage"
    - rm -rf node_modules package-lock.json yarn-lock.json
    - echo "Cleaning gitlab-runner cache"
    - rm -rf /home/gitlab-runner/cache/
  only:
    - master
  tags:
    - runner-smartfran

unit-test:
  stage: unit-test
  before_script:
    - cd api
    - npm install
  script:
    - npm run test:coverage
  artifacts:
    paths:
    - coverage
  only:
    - master
    tags:
    - runner-smartfran

static-test:
  stage: static-test
  allow_failure: true
  before_script:
    - cd api
    - npm install
  script:
    - npm run test:coverage
    #- cd ..
    - pwd
    - ls
    - export SONAR_SCANNER_OPTS="-Xmx512m"
    - /opt/sonar-scanner/bin/sonar-scanner -Dproject.settings=./sonar-project.properties
  after_script:
    - rm -rf .scannerwork
  only:
    - master
  tags:
    - runner-smartfran

build:
  stage: build
  variables:
    DOCKER_DRIVER: overlay2
  script:
   - pwd
   - cd api
   - echo "Building image..."
   - docker build -t $PROJ_IMG .
   - echo "Tagging image..."
   - docker tag $PROJ_IMG $ECR_REPOSITORY/$PROJ_IMG:$IMAGE_TAG
   - echo "Pushing image..."
   - docker ps -a
  only:
   - master
  tags:
   - runner-smartfran
  

push-image:
  stage: push-image
  script:
   - echo "Login to ECR"
   - aws ecr get-login-password --region $ECR_REGION | docker login --username AWS --password-stdin $ECR_REPOSITORY
   - echo "Pushing image..."
   - echo $ECR_REPOSITORY/$PROJ_IMG:$IMAGE_TAG
   - docker push $ECR_REPOSITORY/$PROJ_IMG:$IMAGE_TAG
  after_script:
   - docker system prune --force --all --volumes
  only:
   - master
  tags:
   - runner-smartfran

deploy.testing:
  stage: deploy-testing
  before_script:
    - export BUILD_TAG="$CI_COMMIT_TAG"
  variables:
   BRANCH_NAME: "testing"
   SERVICE_NAME: "platform-service"
   ECS_REGION: "us-east-2"
   CLUSTER: "smartfran-pedidos-common"
   SERVICE: "${SERVICE_NAME}-${BRANCH_NAME}-service"
   TASK: "${SERVICE_NAME}-${BRANCH_NAME}-task"
   PROJ_IMG: "smartfran/${SERVICE_NAME}"
   ECR_REPOSITORY: "382381053403.dkr.ecr.us-east-2.amazonaws.com"
   PROFILE: "smartfran"
   ENV: "testing"

  script:
    - echo "Deploying version $PROJ_IMG"
    - echo $PROJ_IMG
    - echo $ECS_TEMPLATE
    - envsubst < container-definitions.json > ecs-container-definitions.json
    - aws ecs register-task-definition --cli-input-json file://ecs-container-definitions.json --region $ECS_REGION
    - aws ecs update-service --cluster $CLUSTER --service $SERVICE --task-definition $TASK --region $ECS_REGION --force-new-deployment
  only:
    - master
  tags:
    - runner-smartfran

deploy.staging:
  stage: deploy-staging
  before_script:
    - export BUILD_TAG="$CI_COMMIT_TAG"
  variables:
   BRANCH_NAME: "staging"
   SERVICE_NAME: "platform-service"
   ECS_REGION: "us-east-2"
   CLUSTER: "smartfran-pedidos-common"
   SERVICE: "${SERVICE_NAME}-${BRANCH_NAME}-service"
   TASK: "${SERVICE_NAME}-${BRANCH_NAME}-task"
   PROJ_IMG: "smartfran/${SERVICE_NAME}"
   ECR_REPOSITORY: "382381053403.dkr.ecr.us-east-2.amazonaws.com"
   PROFILE: "smartfran"
   ENV: "staging"

  script:
    - echo "Deploying version $PROJ_IMG"
    - echo $PROJ_IMG
    - echo $ECS_TEMPLATE
    - envsubst < container-definitions.json > ecs-container-definitions.json
    - aws ecs register-task-definition --cli-input-json file://ecs-container-definitions.json --region $ECS_REGION
    - aws ecs update-service --cluster $CLUSTER --service $SERVICE --task-definition $TASK --region $ECS_REGION --force-new-deployment
  only:
    - master
  tags:
    - runner-smartfran

# deploy.production:
#   stage: deploy-production
#   before_script:
#     - export BUILD_TAG="$CI_COMMIT_TAG"
#   variables:
#    BRANCH_NAME: "production"
#    SERVICE_NAME: "platforms-service"
#    ECS_REGION: "us-east-1"
#    CLUSTER: "smartfran-pedidos-common"
#    SERVICE: "${SERVICE_NAME}-${BRANCH_NAME}-service"
#    TASK: "${SERVICE_NAME}-${BRANCH_NAME}-task"
#    PROJ_IMG: "smartfran/${SERVICE_NAME}"
#    ECR_REPOSITORY: "382381053403.dkr.ecr.us-east-2.amazonaws.com"
#    PROFILE: "smartfran"
#    ENV: "production"

#   script:
#     - echo "Deploying version $PROJ_IMG"
#     - echo $PROJ_IMG
#     - echo $ECS_TEMPLATE
#     - envsubst < container-definitions-prd.json > ecs-container-definitions.json
#     - aws ecs register-task-definition --cli-input-json file://ecs-container-definitions.json --region $ECS_REGION
#     - aws ecs update-service --cluster $CLUSTER --service $SERVICE --task-definition $TASK --region $ECS_REGION --force-new-deployment
  
#   when: manual
  
#   tags:
#     - smartfran-runner

